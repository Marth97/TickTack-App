{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/providers/firebase-auth-provider.ts","../../src/providers/i-auth-provider.ts","../../src/providers/user-info-provider.ts","../../src/providers/project-provider.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/firebase-data.ts","../../src/app/app.firebase.config.ts","../../src/providers/captured-time-provider.ts","../../src/providers/i-data-provider.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 143;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 143\n// module chunks = 6","var map = {\n\t\"../pages/capture-time/capture-time-page.module\": [\n\t\t440,\n\t\t5\n\t],\n\t\"../pages/login/login-page.module\": [\n\t\t441,\n\t\t4\n\t],\n\t\"../pages/projects/projects-page.module\": [\n\t\t442,\n\t\t3\n\t],\n\t\"../pages/register/register-page.module\": [\n\t\t443,\n\t\t2\n\t],\n\t\"../pages/report/report-page.module\": [\n\t\t444,\n\t\t1\n\t],\n\t\"../pages/test/test-page.module\": [\n\t\t445,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 186;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 186\n// module chunks = 6","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { AngularFireAuth } from \"angularfire2/auth\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Observer } from \"rxjs/Observer\";\n\nimport 'rxjs/add/operator/toPromise';\nimport { IAuthProvider } from './i-auth-provider';\n\n/**\n * @author Matthias\n *\n * FirebaseAuthProvider\n * Dieser Provider behandelt die gesamte Authorisierung des Nutzers fuer eine Firebase-Datenbank.\n */\n@Injectable()\nexport class FirebaseAuthProvider implements IAuthProvider {\n\n    private isUserLoggedInObservable: Observable<boolean>;\n    private isUserLoggedInObserver: Observer<boolean>;\n\n    constructor(private aFAuth: AngularFireAuth) {\n\n        this.prepareIsUserLoggedInObservable();\n    }\n\n    /**\n     * Login eines Nutzers mit E-Mail und Passwort.\n     * @param {string} email\n     * @param {string} password\n     * @returns {Promise<boolean>}\n     */\n    public async login(email: string, password: string): Promise<boolean> {\n\n        return new Promise<boolean>(resolve => {\n            try {\n\n                this.aFAuth.auth.signInWithEmailAndPassword(email, password).then(result => {\n                    resolve(true);\n                }).catch(error => {\n                    console.error(error);\n                    resolve(false);\n                });\n\n            } catch (e) {\n                console.error(e);\n                resolve(false);\n            }\n        });\n    }\n\n    /**\n     * Logout eines Nutzers.\n     * @returns {Promise<boolean>}\n     */\n    public async logout(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            try {\n                this.aFAuth.auth.signOut().then(result => {\n                    resolve(true);\n                }).catch(error => {\n                    console.error(error);\n                    resolve(false);\n                })\n            } catch (e) {\n                console.error(e);\n                resolve(false);\n            }\n        });\n    }\n\n    /**\n     * Registrierung eines neuen Nutzers mit E-Mail und Passwort.\n     * @param {string} email\n     * @param {string} password\n     * @returns {Promise<boolean>}\n     */\n    public async register(email: string, password: string): Promise<boolean> {\n\n        return new Promise<boolean>(resolve => {\n\n            try {\n\n                this.aFAuth.auth.createUserWithEmailAndPassword(email, password).then(result => {\n                    resolve(true);\n                }).catch(error => {\n                    console.error(error);\n                    resolve(false);\n                });\n\n            } catch (e) {\n                console.error(e);\n                resolve(false);\n            }\n\n        });\n    }\n\n    /**\n     * Gibt zurueck ob aktuell ein Nutzer angemeldet ist.\n     * @returns {Promise<boolean>}\n     */\n    public isLoggedIn(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            try {\n\n                this.aFAuth.authState.subscribe((auth) => {\n\n                    if (auth && auth.uid) {\n                        resolve(true);\n                    } else {\n                        resolve(false);\n                    }\n                });\n\n            } catch(e) {\n                console.error(e);\n                resolve(false);\n            }\n        });\n    }\n\n    /**\n     * Gibt die UserID eines Benutzers zurueck.\n     * @returns {string}\n     */\n    public getUserId(): string {\n\n        if (!this.aFAuth.auth) {\n            console.warn('Tried to get userInfo id altrough there is no userInfo logged in.');\n            return '';\n        }\n\n        return this.aFAuth.auth.currentUser.uid;\n    }\n\n    /**\n     * Diese Methode bereitet das Observable fuer den Firebase-Datenprovider vor.\n     * Zunaechst wird das Observable erstellt und anschliessend mit den Firebase-AuthState-Observable\n     * verbunden.\n     */\n    private prepareIsUserLoggedInObservable() {\n        // init isUserLoggedInObservable\n        this.isUserLoggedInObservable = new Observable(observer => {\n            this.isUserLoggedInObserver = observer;\n        });\n\n        // init authState observable-subscription\n        try {\n            this.aFAuth.authState.subscribe((auth) => {\n\n                if (this.isUserLoggedInObserver) {\n\n                    if (auth && auth.uid) {\n                        this.isUserLoggedInObserver.next(true);\n                    } else {\n                        this.isUserLoggedInObserver.next(false);\n                    }\n                }\n            });\n        } catch (e) {\n            console.log(e);\n            this.isUserLoggedInObserver.next(false);\n        }\n    }\n\n    /**\n     * Liefert ein isLoggedIn - Observable. Dieses Observable ist fuer den FirebaseDataProvider gedacht,\n     * sodass dieser sobald der Nutzer angemeldet ist seine Daten laden kann.\n     * @returns {Observable<boolean>}\n     */\n    public isLoggedInAsObservable(): Observable<boolean> {\n        return this.isUserLoggedInObservable;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/firebase-auth-provider.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\n\r\n/**\r\n * @author Matthias\r\n *\r\n * IAuthProvider\r\n * Interface für die standardisierte Authentifizierung zwischen der App und dem Backend-Server.\r\n */\r\n@Injectable()\r\nexport class IAuthProvider {\r\n\r\n    /**\r\n     * Login eines Nutzers mit E-Mail und Passwort.\r\n     * @param {string} email\r\n     * @param {string} password\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public async login(email: string, password: string): Promise<boolean> {\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * Logout eines Nutzers\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public async logout(): Promise<boolean> {\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * Registrierung eines neuen Nutzers mit E-Mail und Passwort.\r\n     * @param {string} email\r\n     * @param {string} password\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public async register(email: string, password: string): Promise<boolean> {\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * Gibt zurueck ob aktuell ein Nutzer angemeldet ist.\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public async isLoggedIn(): Promise<boolean> {\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * Gibt die UserID eines Benutzers zurueck.\r\n     * @returns {string}\r\n     */\r\n    public getUserId(): string {\r\n        return null;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/i-auth-provider.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { UserInfo } from \"../models/user-info\";\r\nimport { IDataProvider } from './i-data-provider';\r\n\r\n/**\r\n *\r\n */\r\n@Injectable()\r\nexport class UserInfoProvider {\r\n\r\n  constructor(private dataProvider: IDataProvider) {\r\n  }\r\n\r\n  public get(): Observable<UserInfo> {\r\n      return this.dataProvider.get('userinfo', null);\r\n  }\r\n\r\n  public update(userInfo: UserInfo): Promise<boolean> {\r\n      return this.dataProvider.update('userinfo', userInfo, null);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user-info-provider.ts","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport { Project } from \"../models/project\";\nimport { Observable } from \"rxjs/Observable\";\nimport { IDataProvider } from './i-data-provider';\n\n/**\n * @Author Matthias\n *\n * ProjectProvider\n * Mithilfe dieser Klasse koennen Instanzen vom Typ Project aus dem Backend:\n *  - erzeugt/geladen\n *  - gespeichert\n *  - oder geloescht werden.\n */\n@Injectable()\nexport class ProjectProvider {\n\n    constructor(public dataProvider: IDataProvider) {\n    }\n\n    /**\n     * Liefert asynchron das angeforderte Projekt.\n     * @param {string} id\n     * @returns {Observable<Project>}\n     */\n    getById(id: string): Observable<Project> {\n        return this.dataProvider.get('projects', id).map(value => {\n            return value as Project;\n        });\n    }\n\n    /**\n     * Liefert asynchon alle Projekte des Benutzers.\n     * @returns {Observable<Project[]>}\n     */\n    getAll(): Observable<Project[]> {\n        return this.dataProvider.get('projects', null).map(value => {\n            return value as Array<Project>;\n        });\n    }\n\n    /**\n     * Loescht eine Instanz aus dem Backend.\n     * @param {string} id\n     * @returns {Promise<boolean>}\n     */\n    deleteById(id: string): Promise<boolean> {\n        return this.dataProvider.delete('projects', id);\n    }\n\n    /**\n     * Erstellt eine Instanz in dem Backend.\n     * @param {Project} project\n     * @returns {Promise<boolean>}\n     */\n    insert(project: Project) {\n        return this.dataProvider.insert('projects', project);\n    }\n\n    /**\n     * Updatet das übergebende Projekt in dem Backend.\n     * @param {Project} project\n     * @returns {Promise<boolean>}\n     */\n    update(project: Project) {\n        return this.dataProvider.update('projects', project, project.id);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/project-provider.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\n\nimport { IDataProvider } from '../providers/i-data-provider';\nimport { FirebaseDataProvider } from '../providers/firebase-data';\n\nimport { ProjectProvider } from '../providers/project-provider';\nimport { UserInfoProvider } from '../providers/user-info-provider';\n\nimport { IAuthProvider } from '../providers/i-auth-provider';\nimport { FirebaseAuthProvider } from '../providers/firebase-auth-provider';\n\nimport { AngularFireModule } from \"angularfire2\";\nimport { FIREBASE_CONFIG } from \"./app.firebase.config\";\nimport { AngularFireAuthModule } from \"angularfire2/auth\";\nimport { AngularFireDatabaseModule } from \"angularfire2/database\";\nimport { CapturedTimeProvider } from '../providers/captured-time-provider';\n\n@NgModule({\n    declarations: [\n        MyApp\n    ],\n    imports: [\n        BrowserModule,\n        IonicModule.forRoot(MyApp),\n\n        AngularFireModule.initializeApp(FIREBASE_CONFIG),\n        AngularFireAuthModule,\n        AngularFireDatabaseModule\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n\n        FirebaseDataProvider,\n        {provide: IDataProvider, useClass: FirebaseDataProvider},\n        ProjectProvider,\n        UserInfoProvider,\n        CapturedTimeProvider,\n\n        FirebaseAuthProvider,\n        {provide: IAuthProvider, useClass: FirebaseAuthProvider}\n\n    ]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\n@Component({\r\n    templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n    @ViewChild(Nav) nav: Nav;\r\n\r\n    rootPage: any = 'LoginPage';\r\n\r\n    pages: Array<{ title: string, component: any }>;\r\n\r\n    constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\r\n        this.initializeApp();\r\n\r\n        // used for an example of ngFor and navigation\r\n        this.pages = [\r\n            {title: 'Erfassung', component: 'CaptureTimePage'},\r\n            {title: 'Projekte', component: 'ProjectsPage'},\r\n            {title: 'Auswertung', component: 'ReportPage'},\r\n            {title: 'Datenbank-Tests', component: 'TestPage'}\r\n        ];\r\n    }\r\n\r\n    initializeApp() {\r\n        this.platform.ready().then(() => {\r\n            // Okay, so the platform is ready and our plugins are available.\r\n            // Here you can do any higher level native things you might need.\r\n            this.statusBar.styleDefault();\r\n            this.splashScreen.hide();\r\n        });\r\n    }\r\n\r\n    openPage(page) {\r\n        // Reset the content nav to have just this page\r\n        // we wouldn't want the back button to show in this scenario\r\n        this.nav.setRoot(page.component);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { AngularFireDatabase } from \"angularfire2/database\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { IDataProvider } from './i-data-provider';\r\nimport { FirebaseAuthProvider } from './firebase-auth-provider';\r\n\r\n/**\r\n * @author Matthias\r\n * Implementierung der IDataProvider-Schnittstelle fuer die Firebase-Datenbank.\r\n * Mit diesem Provider ist es moeglichen Daten aus dem Backend zu\r\n * - laden,\r\n * - speichern,\r\n * - erstellen\r\n * - und loeschen.\r\n */\r\n@Injectable()\r\nexport class FirebaseDataProvider implements IDataProvider {\r\n\r\n    private userData: object;\r\n    private dataSubject: BehaviorSubject<any>;\r\n\r\n    constructor(private auth: FirebaseAuthProvider,\r\n                private db: AngularFireDatabase) {\r\n\r\n        this.initUserData();\r\n        this.initDataSubject();\r\n        this.waitForLogin();\r\n    }\r\n\r\n    /**\r\n     * Initialisiert das lokale Benutzerdatenobjekt.\r\n     */\r\n    private initUserData(): void {\r\n        this.userData = {\r\n            userinfo: {\r\n                name: ''\r\n            },\r\n            projects: [],\r\n            times: []\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initialisiert das lokale Observable.\r\n     */\r\n    private initDataSubject(): void {\r\n        this.dataSubject = new BehaviorSubject(this.userData);\r\n    }\r\n\r\n    /**\r\n     * Lauscht auf das Observable der Firebase-Authentifizierung und wartet auf ein\r\n     * erfolgreiches Anmelden in der Datenbank, um anschließend die Benutzerdaten aus der\r\n     * Datenbank zu laden.\r\n     */\r\n    private waitForLogin(): void {\r\n\r\n        this.auth.isLoggedInAsObservable().subscribe(result => {\r\n            if (result) {\r\n                console.log('load userInfo data');\r\n                this.loadUserData();\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    /**\r\n     * Lädt die Benutzerdaten aus der Datenbank und sendet Veränderungen automatisch\r\n     * an alle Subscriber der Daten.\r\n     */\r\n    private loadUserData(): void {\r\n\r\n        this.db.object(this.getUidPath()).valueChanges()\r\n            .subscribe(data => {\r\n\r\n                if (data === null) {\r\n                    console.log('Create empty userInfo object.');\r\n                    this.createUserDataObject();\r\n                } else {\r\n                    // Speicher die neuen Benutzerdaten aus der Datenbank\r\n                    this.userData = data;\r\n\r\n                    // Sende die neuen Daten an alle Subscriber\r\n                    this.dataSubject.next(data);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein leeres Benutzerdaten-Objekt und speichert es in der Datenbank.\r\n     */\r\n    private createUserDataObject(): void {\r\n        this.saveUserData().catch(\r\n            e => console.warn('Failed to save Userdata.')\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Speichert das aktuelle Benutzerdaten-Objekt.\r\n     * @returns {Promise<void>}\r\n     */\r\n    private saveUserData(): Promise<void> {\r\n        return this.db.object(this.getUidPath()).update(this.userData);\r\n    }\r\n\r\n    /**\r\n     * Liefert ein Observable mit angefordeten Daten aus der Datenbank.\r\n     * @param {string} itemName \"Tabellenbezeichnung\"\r\n     * @param {string} id Für ein bestimmtes Objekt, kann eine ID mit übergeben werden.\r\n     * @returns {Observable<any>}\r\n     */\r\n    public get(itemName: string, id: string = null): Observable<any> {\r\n\r\n        if (!this.userData && !this.userData.hasOwnProperty(itemName)) {\r\n            console.warn('Tried to access ' + itemName + ' of userdata, but nothing like that exisits.');\r\n            return null;\r\n        }\r\n\r\n        return this.dataSubject.map(value => this.keyMapping(value, itemName, id));\r\n    }\r\n\r\n    /**\r\n     * Für den Fall eines bestimmten Datensatzes, kann diese Methode mithilfe der übergebenden\r\n     * ID ein Objekt rausfiltern.\r\n     * @param userData Vollständiges Datenobjekt\r\n     * @param {string} itemName \"Tabellenbezeichnung\"\r\n     * @param {string} id ID für die Filterung eines bestimmten Objektes\r\n     * @returns {any}\r\n     */\r\n    private keyMapping(userData: any, itemName: string, id: string): any {\r\n\r\n        if (!this.userData || !this.userData.hasOwnProperty(itemName)) {\r\n            console.warn('Tried to access ' + itemName + ' of userdata, but nothing like that exisits.');\r\n            return null;\r\n        }\r\n\r\n        if (id != null) {\r\n\r\n            if (!userData[itemName].hasOwnProperty(id)) {\r\n                console.warn('Tried to access key ' + id + ' of userdata/'+ itemName +', but nothing like that exisits.');\r\n                return null;\r\n            }\r\n\r\n            return userData[itemName][id];\r\n\r\n        } else {\r\n\r\n            if(userData[itemName] instanceof Array) {\r\n\r\n                // Falls Array map ID\r\n                userData[itemName].forEach((obj: any, index: number) => {\r\n                    obj['id'] = index;\r\n                });\r\n            }\r\n\r\n            return this.userData[itemName];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Erstellt ein neues Objekt unter dem entsprechenden Pfad.\r\n     * @param {string} itemName \"Tabellenbezeichnung\"\r\n     * @param item Objekt das gespeichert werden soll\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public insert(itemName: string, item: any): Promise<boolean> {\r\n\r\n        return new Promise((resolve) => {\r\n\r\n            if(!this.userData.hasOwnProperty(itemName)) {\r\n                this.userData[itemName] = [];\r\n            }\r\n\r\n            this.userData[itemName].push(item);\r\n            this.saveUserData()\r\n                .then(r => resolve(true))\r\n                .catch(r => resolve(false));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updated ein vorhandenes Objekt.\r\n     * @param {string} itemName \"Tabellenbezeichnung\"\r\n     * @param item Objekt das geupdatet werden soll\r\n     * @param {string} id des Objektes; null falls es kein Array ist\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public update(itemName: string, item: any, id: string = null): Promise<boolean> {\r\n        return new Promise(resolve => {\r\n            if(!this.userData.hasOwnProperty(itemName)) {\r\n                console.warn('Tried to access ' + itemName + ' of userdata, but its not available.');\r\n                resolve(false);\r\n            }\r\n\r\n            if(!this.userData[itemName].hasOwnProperty(id)) {\r\n                console.warn('Tried to access object with id ' + id + ' of ' + itemName + '/ userdata, but its not available.');\r\n                resolve(false);\r\n            }\r\n\r\n            if(id === null) {\r\n                this.userData[itemName] = item;\r\n            } else {\r\n                this.userData[itemName][id] = item;\r\n            }\r\n\r\n            this.saveUserData()\r\n                .then(r => resolve(true))\r\n                .catch(r => resolve(false));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Löscht ein Objekt aus der Datenbank\r\n     * @param {string} itemName\r\n     * @param {string} id\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public delete(itemName: string, id: string): Promise<boolean> {\r\n        return new Promise((resolve => {\r\n            if(!this.userData.hasOwnProperty(itemName)) {\r\n                console.warn('Tried to access ' + itemName + ' of userdata, but its not available.');\r\n                resolve(false);\r\n            }\r\n\r\n            if(!this.userData[itemName].hasOwnProperty(id)) {\r\n                resolve(true);\r\n            }\r\n\r\n            const index = this.userData[itemName].indexOf(this.userData[itemName][id], 0);\r\n            if (index > -1) {\r\n                this.userData[itemName].splice(index, 1);\r\n            }\r\n\r\n            this.saveUserData()\r\n                .then(r => resolve(true))\r\n                .catch(r => resolve(false));\r\n        }));\r\n    }\r\n\r\n\r\n    /**\r\n     * Liefert den Nutzerpfad\r\n     * @returns {string}\r\n     */\r\n    private getUidPath() {\r\n        return '/' + this.auth.getUserId() + '/';\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/firebase-data.ts","export const FIREBASE_CONFIG = {\r\n\r\n    apiKey: \"AIzaSyDmMUaThbip-H6LqAkO9Ynn94ormLF4UUg\",\r\n    authDomain: \"ticktack-zeiterfassung.firebaseapp.com\",\r\n    databaseURL: \"https://ticktack-zeiterfassung.firebaseio.com\",\r\n    projectId: \"ticktack-zeiterfassung\",\r\n    storageBucket: \"ticktack-zeiterfassung.appspot.com\",\r\n    messagingSenderId: \"272704574745\"\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.firebase.config.ts","import { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map';\r\nimport { CapturedTime } from \"../models/captured-time\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { IDataProvider } from './i-data-provider';\r\n\r\n/**\r\n * @Author Matthias\r\n *\r\n * CapturedTimeProvider\r\n * Mithilfe dieser Klasse koennen Instanzen vom Typ CapturedTime aus dem Backend:\r\n *  - erzeugt/geladen\r\n *  - gespeichert\r\n *  - oder geloescht werden.\r\n */\r\n@Injectable()\r\nexport class CapturedTimeProvider {\r\n\r\n    constructor(private dataProvider: IDataProvider) {\r\n    }\r\n\r\n    /**\r\n     * Liefert alle gespeicherten Zeiten als Observable.\r\n     * @returns {Observable<CapturedTime[]>}\r\n     */\r\n    getAll(): Observable<CapturedTime[]> {\r\n        return this.dataProvider.get('times', null).map(values => {\r\n            return values as Array<CapturedTime>\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Erstellt eine neue Zeiterfassung.\r\n     * @param {CapturedTime} capturedTime\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    insert(capturedTime: CapturedTime): Promise<boolean> {\r\n        return this.dataProvider.insert('times', capturedTime);\r\n    }\r\n\r\n    /**\r\n     * Updatet eine erfasste Zeit.\r\n     * @param {CapturedTime} capturedTime\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    update(capturedTime: CapturedTime): Promise<boolean> {\r\n        return this.dataProvider.update('times', capturedTime, capturedTime.id);\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/captured-time-provider.ts","import 'rxjs/add/operator/map';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n/**\r\n * @author Matthias\r\n * IDataProvider\r\n * Interface für die standartisierte Kommunikation zwischen der App und dem Backend-Server.\r\n */\r\nexport class IDataProvider {\r\n\r\n    /**\r\n     * Liefert Daten vom Backend.\r\n     * @params itemName Name des Objektes\r\n     * @params id ID fuer die Selektion eines bestimmten Objektes\r\n     * @returns {any}\r\n     */\r\n    public get(itemName: string, id: string): Observable<any> {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Erstellt Daten im Backend.\r\n     * @params itemName Name des Objektes\r\n     * @params item Objekt das abgespeichert werden soll\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public insert(itemName: string, item: any): Promise<boolean> {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Aktualisiert Daten im Backend.\r\n     * @param itemName Name des Objektes\r\n     * @param item Objekt mit neuen Daten\r\n     * @param id ID des zu aendernden Objektes\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public update(itemName: string, item: any, id: string): Promise<boolean> {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Löscht Daten aus dem Backend.\r\n     * @param itemName Name des Objektes\r\n     * @param id ID des zu loeschenden Objektes\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    public delete(itemName: string, id: string): Promise<boolean> {\r\n        return null\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/i-data-provider.ts"],"sourceRoot":""}