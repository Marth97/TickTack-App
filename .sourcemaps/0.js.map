{"version":3,"sources":["../../src/pages/test/test-page.module.ts","../../src/pages/test/test-page.ts","../../src/models/user-info.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TestPage } from './test-page';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TestPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(TestPage),\r\n  ],\r\n})\r\nexport class TestPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test/test-page.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController } from 'ionic-angular';\r\nimport { Project } from \"../../models/project\";\r\nimport { UserInfo } from \"../../models/user-info\";\r\nimport { UserInfoProvider } from \"../../providers/user-info-provider\";\r\nimport { IAuthProvider } from '../../providers/i-auth-provider';\r\nimport { ProjectProvider } from '../../providers/project-provider';\r\n\r\n/**\r\n * @Author Matthias\r\n * @Info TestPage\r\n * Testen der Datenbank-Funktionen\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n    selector: 'page-test',\r\n    templateUrl: 'test-page.html',\r\n})\r\nexport class TestPage {\r\n\r\n    public id: string;\r\n    public desc: string;\r\n\r\n    public userInfo: UserInfo = new UserInfo();\r\n    public newUserInfo: UserInfo = new UserInfo();\r\n\r\n    public projects: Project[] = [];\r\n\r\n    constructor(private auth: IAuthProvider,\r\n                public navCtrl: NavController,\r\n                public projectProvider: ProjectProvider,\r\n                public userInfoProvider: UserInfoProvider) {\r\n    }\r\n\r\n    ionViewWillLoad(): void {\r\n\r\n        this.auth.isLoggedIn()\r\n            .then(loggedIn => {\r\n                    if (!loggedIn) {\r\n                        this.navCtrl.setRoot('LoginPage');\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    ionViewDidEnter(): void {\r\n\r\n        this.projectProvider.getById('0')\r\n            .subscribe(project => {\r\n                    console.log(project);\r\n                }\r\n            );\r\n\r\n        this.projectProvider.getAll()\r\n            .subscribe(projects => {\r\n                    this.projects = projects;\r\n                    console.log(projects);\r\n                }\r\n            );\r\n\r\n        this.userInfoProvider.get()\r\n            .subscribe(userInfo => {\r\n                    this.userInfo = userInfo;\r\n                    console.log(userInfo);\r\n                }\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Logout-Funktion\r\n     */\r\n    logout(): void {\r\n        this.auth.logout()\r\n            .then(result => {\r\n                    if (result) {\r\n                        this.navCtrl.setRoot('LoginPage');\r\n                    }\r\n                }\r\n            );\r\n    }\r\n\r\n    createNewProject(): void {\r\n        this.projectProvider.insert(({desc: this.desc} as Project))\r\n            .then(success => {\r\n                    console.log('Projekt angelegt');\r\n                }\r\n            );\r\n    }\r\n\r\n    updateProject(): void {\r\n        this.projectProvider.update({id: this.id, desc: this.desc} as Project)\r\n            .then(succes => {\r\n                    console.log('Projekt geändert.');\r\n                }\r\n            );\r\n    }\r\n\r\n    deleteProject(project: Project): void {\r\n        this.projectProvider.deleteById(project.id)\r\n            .then(success => {\r\n                    console.log('Projekt gelöscht.');\r\n                }\r\n            );\r\n    }\r\n\r\n    updateUserInfo(): void {\r\n        this.userInfoProvider.update(this.newUserInfo)\r\n            .then(success => {\r\n                    console.log('Benutzerdaten aktualisiert.')\r\n                }\r\n            );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/test/test-page.ts","/**\r\n * @author Matthias\r\n * Modell eines UserInfo-Objektes\r\n */\r\nexport class UserInfo {\r\n\r\n    public name;\r\n\r\n    public constructor() {\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/user-info.ts"],"sourceRoot":""}